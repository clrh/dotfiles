[color] 
    diff = auto
    interactive = auto
    status = auto
    branch = auto
[alias]
    glog = log --graph --abbrev-commit --name-status --date=relative --stat
    llog = log --graph --decorate --pretty=oneline --abbrev-commit
    alog = log --graph --decorate --pretty=oneline --abbrev-commit --all
    la = config --global --list
    st = status
    stp = status --porcelain
    ci = commit
    cp = cherry-pick -x
    br = branch
    ref = branch -vv
    sb = show-branch 
    bc = branch -a --contains
    co = checkout
    cob = "!git checkout -b $1 $1"
    up = pull --rebase
    rz = reset --hard HEAD
    unstage = reset HEAD
    lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%d%Creset %s %Cgreen(%ci) %C(blue)<%an> %Creset' --abbrev-commit
    lgv = log --pretty=format:'%h %d %s (%ci) <%an> ' --abbrev-commit
    abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
    wip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"wip\""
    unwip = !"git log -n 1 | grep -q -c wip && git reset HEAD~1"
    prune = remote prune origin
    # en test
    abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
    whois = "!sh -c 'git log -i -1 --pretty=\"format::%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat::%h (%s, %ad)' --date=short
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage:: git alias <new alias> <original command>\" >&2 && exit 1'" - #git alias new_alias original_command
