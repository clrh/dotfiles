set nocompatible
"colorscheme obsidian2
"colorscheme morning
 
filetype plugin on
set autoindent
 
set backspace=indent,eol,start
set clipboard+=unnamed
set fileformats=unix,dos,mac
set mouse=a
 
"set cursorline
set laststatus=2
set linespace=0
set statusline=%f%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]
 
" Show non-printable character
set list
set listchars=tab:>\ ,trail:.,nbsp:Â·
 
au BufRead,BufNewFile *.pl,*.pm set expandtab
au BufRead,BufNewFile *.pl,*.pm set shiftwidth=4
au BufRead,BufNewFile *.pl,*.pm set softtabstop=4
au BufRead,BufNewFile *.pl,*.pm set tabstop=4
 
au BufRead,BufNewFile *.tmpl,*.tt set expandtab
au BufRead,BufNewFile *.tmpl,*.tt set shiftwidth=4
au BufRead,BufNewFile *.tmpl,*.tt set softtabstop=4
au BufRead,BufNewFile *.tmpl,*.tt set tabstop=4
 
au BufRead,BufNewFile *.tt setf tt2html
 
" Show perldoc page instead on man when hitting K on a keyword
au FileType perl setlocal keywordprg=perldoc\ -f
 
map <F2> :w!<CR> :!./build.sh<CR>
map <F3> :Tlist<Return>
map <F4> :BufExplorer<CR>
map <F6> :w!<CR> :Errors<CR>
 
" VimWiki
"map <F5> \ww
"map <F6> \w\w
 
" Toggle search highlighting
map <F7> :set hlsearch!<CR>
 
" perltidy a block of code
vmap <F8> :!perltidy -q<CR>
 
" \pm on perl module name to open the file in the current window
nnoremap <Leader>pm :call LoadPerlModule()<CR>
function! LoadPerlModule()
	execute 'e `perldoc -l ' . expand("<cWORD>"). '`'
endfunction
 
"if has("gui_running")
"	colorscheme koehler
"	highlight CursorLine guibg=#000030
 
	" hide all gui but menubar
"	set guioptions+=lLrRbBT
"	set guioptions-=lLrRbBT
 
"	set guifont=Monospace\ 8
"	set mousehide
"endif

syntax on

syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins

autocmd   FileType pl source ~/.vim/ftplugin/perl.vim
autocmd   FileType rb source ~/.vim/ftplugin/ruby.vim

" DRUPAL
let g:syntastic_phpcs_conf=" --standard=Drupal --extensions=php,module,inc,install,test,profile,theme"

map <F4> :w!<CR> :!perl %<CR>
map <F3> :w!<CR> :!prove %<CR>

let g:instant_markdown_slow = 1

" Vundle install


set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
"Plugin 'VundleVim/Vundle.vim'

" Plugins
"Plugin 'joonty/vdebug'

" All of your Plugins must be added before the following line
"call vundle#end()            " required
"filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""""""""" Vundle end


filetype plugin indent on " required!

"Markdown
" https://github.com/plasticboy/vim-markdown
let g:vim_markdown_folding_disabled=1
let g:vim_markdown_initial_foldlevel=1

"Pathogen
execute pathogen#infect()

"Zeal
nnoremap <silent> <C-K> "zyiw:call system("nohup zeal --query".@z."&")<CR>
